//dfs
//Runtime 149
//Memory Usage 43.3
class Solution {
public:

    int minMalwareSpread(vector<vector<int>>& graph, vector<int>& initial) {
        int n = graph.size();
        vector<int> adjs[n];
        sort(initial.begin(), initial.end());
        for(int i = 0; i < n; ++i)
            for(int j = 0; j < n; ++j)
                if(graph[i][j])
                    adjs[i].push_back(j);
        
        bool vis[n];
        
        function<int(int)> dfs = [&](int u){
            if(vis[u])
                return 0;
            vis[u] = true;
            int res = 1;
            for(const int adj : adjs[u]){
                res += dfs(adj);
            }
            return res;
        };
        
        int mn = INT_MAX, res = 0;
        for(const int init : initial){
            memset(vis, 0, sizeof(vis));
            vis[init] = true;
            
            int cur = 0;
            
            for(const int init : initial)
                cur += dfs(init);
            if(cur < mn)
                res = init, mn = cur;
            
        }
        return res;
    }
};